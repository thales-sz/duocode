networks:
  app-network:
    driver: bridge
    name: app-network

services:
  app01: &app
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    command: npm run start:dev
    container_name: app01
    hostname: app01
    environment:
      - POSTGRES_HOST=localhost
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    networks:
      - app-network
  app02:
    <<: *app
    hostname: app02
    container_name: app02
    ports:
      - "3001:3000"
  app03:
    <<: *app
    hostname: app03
    container_name: app03
    ports:
      - "3002:3000"
  app04:
    <<: *app
    hostname: app04
    container_name: app04
    ports:
      - "3003:3000"
  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app01
      - app02
      - app03
      - app04
    ports:
      - "9999:9999"
    restart: always
    networks:
      - app-network
  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
    ports:
      - '5432:5432'
    expose:
      - 5432
    networks:
      - app-network
